/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { Color } from "three";

export default function Car(props) {
  const model = useRef()
  const { nodes, materials } = useGLTF("/car.glb");

  if (props.state.color) {
    materials["body.color"].color = new Color(props.state.color)

  }

  if (props.state.accent) {
    materials["body.focus"].color = new Color(props.state.accent)
  }

  if (props.state.plastic) {
    materials["body.plastic"].color = new Color(props.state.plastic)
    materials["bumpers.plastic"].color = new Color(props.state.plastic)
  }

  if (props.state.exhaust) {
    materials["exhaust.metal"].color = new Color(props.state.exhaust)
  }

  return (
    <group {...props} dispose={null} rotation={[0, Math.PI / 1.2, 0]} ref={model}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.piece_5004.geometry}
        material={materials["body.color"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.piece_5004_1.geometry}
        material={materials["body.plastic"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.piece_5004_2.geometry}
        material={materials["body.focus"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Куб008.geometry}
        material={materials["bumpers.metallic"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Куб008_1.geometry}
        material={materials["bumpers.plastic"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Куб003.geometry}
        material={materials.focus}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Куб003_1.geometry}
        material={materials["focus.mirror"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Куб003_2.geometry}
        material={materials["focus.panel"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Куб003_3.geometry}
        material={materials.mudguard}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Куб003_4.geometry}
        material={materials["exhaust.metal"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Куб014.geometry}
        material={materials["headlight.chrome"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Куб014_1.geometry}
        material={materials["headlight.plastic"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Куб014_2.geometry}
        material={materials["headlight.backglass"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Куб014_3.geometry}
        material={materials["headlight.glass.signal"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Куб014_4.geometry}
        material={materials["headlight.glass"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Куб014_5.geometry}
        material={materials["headlight.light"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Куб014_6.geometry}
        material={materials["headlight.dipped_beam"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Куб014_7.geometry}
        material={materials["headlight.light.signal.LEFT"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Куб014_8.geometry}
        material={materials["headlight.light.signal.RIGHT"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Куб014_9.geometry}
        material={materials["headlight.light.stop"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Куб014_10.geometry}
        material={materials["headlight.light.goback"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Куб014_11.geometry}
        material={materials["headlight.light_on"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Куб011.geometry}
        material={materials["mirror.plastic"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Куб011_1.geometry}
        material={materials.mirror}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.piece_0015.geometry}
        material={materials["wipper.plastic"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.piece_0015_1.geometry}
        material={materials["wipper.rubber"]}
      />
      <group
        position={[-0.74, 0.34, -1.26]}
        rotation={[Math.PI, 0, Math.PI]}
        scale={[1.56, 1.3, 1.3]}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Цилиндр006.geometry}
          material={materials["wheel.tire.FL"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Цилиндр006_1.geometry}
          material={materials["wheel.disk.FL"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Цилиндр006_2.geometry}
          material={materials["wheel.chrome.FL"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Цилиндр006_3.geometry}
          material={materials["wheel.focus.FL"]}
        />
      </group>
      <group
        position={[0.74, 0.34, -1.26]}
        rotation={[0, 0, -Math.PI]}
        scale={[-1.56, -1.3, -1.3]}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Цилиндр003.geometry}
          material={materials["wheel.tire.FR"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Цилиндр003_1.geometry}
          material={materials["wheel.disk.FR"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Цилиндр003_2.geometry}
          material={materials["wheel.chrome.FR"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Цилиндр003_3.geometry}
          material={materials["wheel.focus.FR"]}
        />
      </group>
      <group
        position={[-0.74, 0.34, 1.09]}
        rotation={[Math.PI, 0, Math.PI]}
        scale={[1.56, 1.3, 1.3]}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Цилиндр001.geometry}
          material={materials["wheel.tire.RL"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Цилиндр001_1.geometry}
          material={materials["wheel.disk.RL"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Цилиндр001_2.geometry}
          material={materials["wheel.chrome.RL"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Цилиндр001_3.geometry}
          material={materials["wheel.focus.RL"]}
        />
      </group>
      <group
        position={[0.74, 0.34, 1.09]}
        rotation={[0, 0, -Math.PI]}
        scale={[-1.56, -1.3, -1.3]}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Цилиндр002.geometry}
          material={materials["wheel.tire.RR"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Цилиндр002_1.geometry}
          material={materials["wheel.disk.RR"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Цилиндр002_2.geometry}
          material={materials["wheel.chrome.RR"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Цилиндр002_3.geometry}
          material={materials["wheel.focus.RR"]}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.piece_5001.geometry}
        material={materials["win.glass"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.piece_5001_1.geometry}
        material={materials["win.rubber"]}
      />
    </group>
  );
}

useGLTF.preload("/car.glb");
